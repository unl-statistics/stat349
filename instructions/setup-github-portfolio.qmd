---
title: "Setting Up a Github.io portfolio"
---

# Steps

1.  Create a github repository that is named "portfolio" and located at <https://github.com/%3Cusername%3E/portfolio>

2.  Create a quarto website (I recommend a blog â€“ it will make it easier to keep track of when things are updated) by following [these directions](https://quarto.org/docs/websites/website-blog.html).

3.  Set your site up to render to the docs directory ([detailed instructions](https://quarto.org/docs/publishing/github-pages.html)).

    -   [ ] Change your `_quarto.yml` file to have `output-dir: docs`
    -   [ ] Create an empty `.nojekyll` file in the main directory of your project repository
    -   [ ] Configure your GitHub repository (Settings -\> Pages -\> Build and Deployment) to publish the `/docs` directory of the `main` branch of your repository.

Rendering your site will be done manually -- thus, each time you want to update the actual site, you'll have to run the following commands in the **terminal** (not the R console):

```
quarto render
git add docs
git commit -m "Publish site to docs/"
git push
```

(You can also accomplish this by hitting the Render button in RStudio and then adding and committing the docs folder in the git pane in RStudio.)

If you're feeling fancy, you can automate this process using a GitHub action, but this is fiddly and probably not worth it unless you're actually planning to use this as a blog and update it frequently. If you decide to set everything up with Github Actions, that is fine, but I can only offer a minimal amount of help with debugging.

::: callout-caution
### Rendering your site

Updating the markdown files is not enough -- you have to render and push the docs folder for changes to show up on the site.

If things aren't working, double check that running Render doesn't change anything in the Git pane, and then check that the `docs/` folder has been committed AND pushed to GitHub.
:::
